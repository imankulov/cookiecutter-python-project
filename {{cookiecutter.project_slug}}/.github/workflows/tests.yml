name: tests

on: [push]

jobs:
  build-test:
    runs-on: ubuntu-latest
    {% if cookiecutter.database == "postgresql" -%}
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: "{{ cookiecutter.postgresql_user }}"
          POSTGRES_PASSWORD: "{{ cookiecutter.postgresql_password }}"
          POSTGRES_DB: "{{ cookiecutter.postgresql_database }}"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    {%- endif %}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "{{ cookiecutter.python_version }}"
      - name: Install dependencies
        run: |
          set -ex
          curl -sSL https://install.python-poetry.org | python3 -
          $HOME/.local/bin/poetry install
      - name: Create environment file for testing
        run: |
          cp env.testing .env
      - name: Test with pytest
        run: |
          set -ex
          $HOME/.local/bin/poetry run coverage run -m pytest
      - name: Convert coverage to XML
        run: |
          set -ex
          $HOME/.local/bin/poetry run coverage xml
      - name: Upload coverage to codecov
        env:
          CODECOV_TOKEN: {% raw %}${{ secrets.CODECOV_TOKEN }}{% endraw %}
        run: |
          bash <(curl -s https://codecov.io/bash)
